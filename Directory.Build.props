<Project>
    <!-- C# analyzers configuration -->
    <PropertyGroup>
        <CodeAnalysisRuleSet>$(SolutionDir)global.ruleset</CodeAnalysisRuleSet>
        <TargetFramework>net7.0</TargetFramework>
        <SuppressTrimAnalysisWarnings>true</SuppressTrimAnalysisWarnings>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
        <DefineConstants>_LINUX</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
        <DefineConstants>_MACOS</DefineConstants>
    </PropertyGroup>

    <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
        <DefineConstants>_WINDOWS</DefineConstants>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.321" PrivateAssets="all" />
        <AdditionalFiles Include="$(SolutionDir)stylecop.json" Link="stylecop.json" />

        <PackageReference Include="SonarAnalyzer.CSharp" Version="8.54.0.64047" />
    </ItemGroup>

    <!--
        WarningsAsErrors configuration

        We configure these to be more relaxed in Debug builds, to avoid being a pain in the neck while editing code
        (where you might want to be able to e.g. comment out code temporarily, sometimes breaking these rules). However,
        since we build a full build using the Release configuration in CI for each pull request, none of these warnings
        should be able to slip through into the 'master' branch. This aims to be a suitable compromise between
        conformity and convenience.
      -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    </PropertyGroup>
</Project>
