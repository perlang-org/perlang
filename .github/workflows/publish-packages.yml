name: .NET publish packages

# Technically, this could be conditionalized on the following paths:
#
# - .github/workflows/publish-packages.yml
# - src/**
#
# However, doing so means the workflow will never run on e.g. docs/ PRs. This is
# bad because the job is a "mandatory job", required for CI to be considered
# green. Hence, the easy way out is to let it run unconditionally.
#
# The underlying cause here is a limitation in GitHub:
# https://github.community/t/feature-request-conditional-required-checks/16761
on: [push]

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail -O inherit_errexit {0}

jobs:
  publish-packages:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Re-generate auto-generated files
        run: make auto-generated

      #
      # Build releases
      #
      - name: Build linux-arm release
        run: dotnet publish src/Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r linux-arm --self-contained true /p:PublishReadyToRun=true /p:SolutionDir=$(pwd)/

      - name: Build linux-arm-64 release
        run: dotnet publish src/Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r linux-arm64 --self-contained true /p:PublishReadyToRun=true /p:SolutionDir=$(pwd)/

      - name: Build linux-x64 release
        run: dotnet publish src/Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r linux-x64 --self-contained true /p:PublishReadyToRun=true /p:SolutionDir=$(pwd)/

      - name: Build osx-x64 release
        run: dotnet publish src/Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r osx-x64 --self-contained true /p:SolutionDir=$(pwd)/

      - name: Build win-x64 release
        run: dotnet publish src/Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r win-x64 --self-contained true /p:SolutionDir=$(pwd)/

      #
      # Create .tar.gz archives
      #
      - name: Create linux-arm .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-linux-arm.tar.gz *
        working-directory: src/Perlang.ConsoleApp/bin/Release/net6.0/linux-arm/publish

      - name: Create linux-arm64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-linux-arm64.tar.gz *
        working-directory: src/Perlang.ConsoleApp/bin/Release/net6.0/linux-arm64/publish

      - name: Create linux-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-linux-x64.tar.gz *
        working-directory: src/Perlang.ConsoleApp/bin/Release/net6.0/linux-x64/publish

      - name: Create osx-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-osx-x64.tar.gz *
        working-directory: src/Perlang.ConsoleApp/bin/Release/net6.0/osx-x64/publish

      - name: Create win-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-win-x64.tar.gz *
        working-directory: src/Perlang.ConsoleApp/bin/Release/net6.0/win-x64/publish

      - name: List .tar.gz files
        run: ls -l src/Perlang.ConsoleApp/bin/Release/net6.0/*/*.tar.gz

      #
      # Upload files to releases server via rsync
      #
      - name: Upload linux-arm .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./src/Perlang.ConsoleApp/bin/Release/net6.0/linux-arm/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload linux-arm64 .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./src/Perlang.ConsoleApp/bin/Release/net6.0/linux-arm64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload linux-x64 .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./src/Perlang.ConsoleApp/bin/Release/net6.0/linux-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload osx-x64 .tar.gz file to build cloud
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./src/Perlang.ConsoleApp/bin/Release/net6.0/osx-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload win-x64 .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./src/Perlang.ConsoleApp/bin/Release/net6.0/win-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Update latest build symlink
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SSH_REMOTE_HOST }}
          username: ${{ secrets.SSH_REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ${{ secrets.UPDATE_SYMLINK_CMD }}
        if: github.ref == 'refs/heads/master'
