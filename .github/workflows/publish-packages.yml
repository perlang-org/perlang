name: .NET Core publish packages

on:
  push:
    paths:
      # TODO: Replace Perlang** with src/ once we have moved all the projects in there.
      # TODO: https://github.com/perlang-org/perlang/issues/82
      - .github/workflows/publish-packages.yml
      - Perlang**

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail -O inherit_errexit {0}

jobs:
  publish-packages:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.102

      - name: Re-generate auto-generated files
        run: make auto-generated

      #
      # Build releases
      #
      - name: Build linux-x64 release
        run: dotnet publish Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r linux-x64 --self-contained true /p:PublishReadyToRun=true /p:SolutionDir=$(pwd)/

      - name: Build osx-x64 release
        run: dotnet publish Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r osx-x64 --self-contained true /p:SolutionDir=$(pwd)/

      - name: Build win-x64 release
        run: dotnet publish Perlang.ConsoleApp/Perlang.ConsoleApp.csproj -c Release -r win-x64 --self-contained true /p:SolutionDir=$(pwd)/

      #
      # Create .tar.gz archives
      #
      - name: Create linux-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-linux-x64.tar.gz *
        working-directory: Perlang.ConsoleApp/bin/Release/net5.0/linux-x64/publish

      - name: Create osx-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-osx-x64.tar.gz *
        working-directory: Perlang.ConsoleApp/bin/Release/net5.0/osx-x64/publish

      - name: Create win-x64 .tar.gz file
        run: version=$(../../linux-x64/perlang -v) && tar cvzf ../perlang-$version-win-x64.tar.gz *
        working-directory: Perlang.ConsoleApp/bin/Release/net5.0/win-x64/publish

      - name: List .tar.gz files
        run: ls -l Perlang.ConsoleApp/bin/Release/net5.0/*/*.tar.gz

      #
      # Upload files to releases server via rsync
      #
      - name: Upload linux-x64 .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./Perlang.ConsoleApp/bin/Release/net5.0/linux-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload osx-x64 .tar.gz file to build cloud
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./Perlang.ConsoleApp/bin/Release/net5.0/osx-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Upload win-x64 .tar.gz file to releases server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "./Perlang.ConsoleApp/bin/Release/net5.0/win-x64/*.tar.gz"
          REMOTE_HOST: ${{ secrets.SSH_REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.SSH_REMOTE_USER }}
          TARGET: ${{ secrets.SSH_REMOTE_TARGET }}
        if: github.ref == 'refs/heads/master'

      - name: Update latest build symlink
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SSH_REMOTE_HOST }}
          username: ${{ secrets.SSH_REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ${{ secrets.UPDATE_SYMLINK_CMD }}
        if: github.ref == 'refs/heads/master'
